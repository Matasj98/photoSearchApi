{"version":3,"sources":["Components/Search/search.component.js","Actions/action.js","Components/Image/image.component.js","Components/SavedQueries/savedQueries.component.js","Thunk/removeQuery.js","App.js","Reducers/savedQueries.js","Reducers/index.js","index.js"],"names":["Search","setSearchText","e","setState","searchText","target","value","saveQuery","state","length","props","onAddQuery","alert","className","type","placeholder","onChange","onClick","search","this","React","Component","connect","dispatch","name","addQuery","Image","loading","loader","alt","src","imageId","onLoad","SavedQueries","savedQueries","map","index","key","onRemoveQuery","queries","getState","copy","indexOf","splice","query","removeQuery","App","getUnsplashImage","item","axios","get","params","headers","Authorization","then","res","imageData","data","results","catch","err","console","log","imageContainer","image","id","urls","full","initialState","allReducer","combineReducers","action","concat","store","createStore","applyMiddleware","Thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45b6176f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./search.style.scss\";\nimport { connect } from \"react-redux\";\nimport { addQuery } from \"../../Actions/action\";\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchText: \"\"\n    };\n  }\n\n  setSearchText = e => {\n    this.setState({ searchText: e.target.value });\n  };\n\n  saveQuery = () => {\n    if (this.state.searchText.length !== 0) {\n      this.props.onAddQuery(this.state.searchText);\n    } else {\n      alert(`Input field is empty`);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for images\"\n          onChange={e => this.setSearchText(e)}\n        />\n        <div>\n          <button onClick={() => this.props.search(this.state.searchText)}>\n            Search\n          </button>\n          <button onClick={this.saveQuery}>Save</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddQuery: name => dispatch(addQuery(name))\n});\n\nexport default connect(null, mapDispatchToProps)(Search);\n","export const addQuery = name => ({\n  type: \"addQuery\",\n  name\n});\n\nexport const changedQuery = query => ({\n  type: \"changedQuery\",\n  query\n});\n","import React from \"react\";\nimport \"./image.style.scss\";\nimport \"../../Assets/LoadingSpiner/spiner.style.scss\";\n\nclass Image extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true\n    };\n  }\n  render() {\n    const loader = (\n      <div className=\"spinner\">\n        <div className=\"bounce1\"></div>\n        <div className=\"bounce2\"></div>\n        <div className=\"bounce3\"></div>\n      </div>\n    );\n\n    return (\n      <div className=\"image\">\n        <img\n          alt=\"lala\"\n          src={this.props.imageId}\n          onLoad={() => this.setState({ loading: false })}\n        />\n        {this.state.loading ? loader : null}\n      </div>\n    );\n  }\n}\n\nexport default Image;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./savedQueries.scss\";\nimport { removeQuery } from \"../../Thunk/removeQuery\";\n\nclass SavedQueries extends React.Component {\n  render() {\n    return (\n      <div className=\"savedQueries\">\n        <h1>Saved Queries</h1>\n        <ul>\n          {this.props.savedQueries.map((name, index) => (\n            <div className=\"u-flexSpaceBetween\" key={index}>\n              <li onClick={() => this.props.search(name)}>{name}</li>\n              <button onClick={() => this.props.onRemoveQuery(name)}>\n                Delete\n              </button>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  savedQueries: state.savedQueries.queries\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveQuery: name => dispatch(removeQuery(name))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedQueries);\n","import { changedQuery } from \"../Actions/action\";\n\nexport const removeQuery = name => (dispatch, getState) => {\n  const copy = [...getState().savedQueries.queries];\n  const index = copy.indexOf(name);\n  copy.splice(index, 1);\n  dispatch(changedQuery(copy));\n};\n","import React from \"react\";\nimport \"./App.scss\";\nimport axios from \"axios\";\nimport Search from \"./Components/Search/search.component\";\nimport Image from \"./Components/Image/image.component\";\nimport SavedQueries from \"./Components/SavedQueries/savedQueries.component\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      imageData: null\n    };\n  }\n\n  getUnsplashImage = item => {\n    axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: { query: item },\n        headers: {\n          Authorization:\n            \"Client-ID c2c1213b2926687ccb49f712386ddba8815b841153dd247b26b4de79efea9fea\"\n        }\n      })\n      .then(res => this.setState({ imageData: res.data.results }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { imageData } = this.state;\n\n    let imageContainer = <h1>Search For Images</h1>;\n    if (imageData !== null) {\n      imageContainer = imageData.map(image => (\n        <Image key={image.id} imageId={image.urls.full} />\n      ));\n      if (imageData.length === 0) {\n        imageContainer = <h1>No Images Found</h1>;\n      }\n    }\n\n    return (\n      <div>\n        <Search search={this.getUnsplashImage} />\n        <div className=\"content\">\n          <div\n            className={\n              imageData === null\n                ? null\n                : imageData.length === 0\n                ? null\n                : \"imageGrid\"\n            }\n          >\n            {imageContainer}\n          </div>\n          <SavedQueries search={this.getUnsplashImage} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  queries: []\n};\n\nexport const savedQueries = (state = initialState, action) => {\n  switch (action.type) {\n    case \"addQuery\":\n      return {\n        ...state,\n        queries: state.queries.concat(action.name)\n      };\n    case \"changedQuery\":\n      return {\n        ...state,\n        queries: action.query\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { savedQueries } from \"./savedQueries\";\n\nexport const allReducer = combineReducers({\n  savedQueries\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Thunk from \"redux-thunk\";\nimport { allReducer } from \"./Reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nconst store = createStore(allReducer, applyMiddleware(Thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}