{"ast":null,"code":"var _jsxFileName = \"/home/matas/Documents/mediapark task/my-app/src/Components/Search/search.component.js\";\nimport React from \"react\";\nimport \"./search.style.scss\";\nimport { connect } from \"react-redux\";\nimport { addQuery } from \"../../Actions/action\";\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.setSearchText = e => {\n      this.setState({\n        searchText: e.target.value\n      });\n    };\n\n    this.saveQuery = () => {\n      if (this.state.searchText.length !== 0) {}\n\n      this.props.onAddQuery(this.state.searchText);\n    };\n\n    this.state = {\n      searchText: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for images\",\n      onChange: e => this.setSearchText(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.props.search(this.state.searchText),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"button\", {\n      onClick: this.saveQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddQuery: name => dispatch(addQuery(name))\n});\n\nexport default connect(null, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/home/matas/Documents/mediapark task/my-app/src/Components/Search/search.component.js"],"names":["React","connect","addQuery","Search","Component","constructor","setSearchText","e","setState","searchText","target","value","saveQuery","state","length","props","onAddQuery","render","search","mapDispatchToProps","dispatch","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,aARc,GAQEC,CAAC,IAAI;AACnB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAvB,OAAd;AACD,KAVa;;AAAA,SAYdC,SAZc,GAYF,MAAK;AACf,UAAG,KAAKC,KAAL,CAAWJ,UAAX,CAAsBK,MAAtB,KAAiC,CAApC,EAAsC,CAErC;;AACD,WAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKH,KAAL,CAAWJ,UAAjC;AACD,KAjBa;;AAGZ,SAAKI,KAAL,GAAa;AACXJ,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAaDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,QAAQ,EAAEV,CAAC,IAAI,KAAKD,aAAL,CAAmBC,CAAnB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKQ,KAAL,CAAWG,MAAX,CAAkB,KAAKL,KAAL,CAAWJ,UAA7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CANF,CADF;AAiBD;;AAtCkC;;AAyCrC,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACtCJ,EAAAA,UAAU,EAAEK,IAAI,IAAID,QAAQ,CAAClB,QAAQ,CAACmB,IAAD,CAAT;AADU,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport \"./search.style.scss\";\nimport { connect } from \"react-redux\";\nimport { addQuery } from \"../../Actions/action\";\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchText: \"\"\n    };\n  }\n\n  setSearchText = e => {\n    this.setState({ searchText: e.target.value });\n  };\n\n  saveQuery = () =>{\n    if(this.state.searchText.length !== 0){\n      \n    }\n    this.props.onAddQuery(this.state.searchText)\n  }\n\n  render() {\n    return (\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for images\"\n          onChange={e => this.setSearchText(e)}\n        />\n        <div>\n          <button onClick={() => this.props.search(this.state.searchText)}>\n            Search\n          </button>\n          <button onClick={this.saveQuery}>\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAddQuery: name => dispatch(addQuery(name))\n});\n\nexport default connect(null, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}